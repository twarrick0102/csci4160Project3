Terminals unused in grammar

   NUMBER


Rules useless in parser due to conflicts

   72 expr-seq: error NEWLINE

   76 expr-list: error NEWLINE

   95 type-declaration: error NEWLINE

  111 variable-declaration: error NEWLINE

  118 function-declaration: error NEWLINE


State 4 conflicts: 2 shift/reduce
State 21 conflicts: 14 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 109 conflicts: 16 reduce/reduce
State 113 conflicts: 34 reduce/reduce
State 119 conflicts: 10 reduce/reduce
State 150 conflicts: 15 reduce/reduce
State 161 conflicts: 14 shift/reduce
State 162 conflicts: 14 shift/reduce
State 163 conflicts: 15 shift/reduce
State 164 conflicts: 14 shift/reduce
State 165 conflicts: 13 shift/reduce
State 166 conflicts: 13 shift/reduce
State 180 conflicts: 10 reduce/reduce
State 212 conflicts: 13 shift/reduce
State 215 conflicts: 13 shift/reduce
State 216 conflicts: 13 shift/reduce
State 217 conflicts: 14 shift/reduce
State 218 conflicts: 13 shift/reduce
State 240 conflicts: 13 shift/reduce
State 241 conflicts: 13 shift/reduce
State 242 conflicts: 14 shift/reduce
State 243 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program line

    3 line: NEWLINE
    4     | exp NEWLINE
    5     | error NEWLINE

    6 exp: STRING
    7    | INT
    8    | NIL
    9    | lvalue
   10    | lvalue ASSIGN exp
   11    | exp PLUS exp
   12    | exp MINUS exp
   13    | exp TIMES exp
   14    | exp DIVIDE exp
   15    | exp EQ exp
   16    | exp NEQ exp
   17    | exp GT exp
   18    | exp LT exp
   19    | exp GE exp
   20    | exp LE exp
   21    | exp OR exp
   22    | exp AND exp
   23    | exp POWER exp
   24    | MINUS exp
   25    | ID LPAREN expr-list RPAREN
   26    | ID LPAREN RPAREN
   27    | LPAREN expr-seq RPAREN
   28    | LPAREN RPAREN
   29    | ID LBRACE field-list RBRACE
   30    | ID LBRACE RBRACE
   31    | ID LBRACK exp RBRACK OF exp
   32    | IF exp THEN exp
   33    | IF exp THEN exp ELSE exp
   34    | WHILE exp DO exp
   35    | FOR ID ASSIGN exp TO exp DO exp
   36    | BREAK
   37    | LET declaration-list IN expr-seq END
   38    | LET declaration-list IN END
   39    | error ASSIGN exp
   40    | error PLUS exp
   41    | error MINUS exp
   42    | error TIMES exp
   43    | error DIVIDE exp
   44    | error EQ exp
   45    | error NEQ exp
   46    | error GT exp
   47    | error LT exp
   48    | error GE exp
   49    | error LE exp
   50    | error OR exp
   51    | error AND exp
   52    | UMINUS error
   53    | error POWER exp
   54    | MINUS error
   55    | IF error THEN exp
   56    | IF exp THEN error
   57    | IF error THEN error
   58    | IF error THEN exp ELSE exp
   59    | IF exp THEN error ELSE exp
   60    | IF exp THEN exp ELSE error
   61    | WHILE error DO exp
   62    | FOR ID ASSIGN error TO exp DO exp
   63    | FOR ID ASSIGN exp TO error DO exp
   64    | FOR ID ASSIGN exp TO exp DO error
   65    | LET error IN expr-seq END
   66    | LET declaration-list IN error END
   67    | LET error IN error END
   68    | error NEWLINE

   69 expr-seq: exp
   70         | expr-seq SEMICOLON exp
   71         | error SEMICOLON exp
   72         | error NEWLINE

   73 expr-list: exp
   74          | expr-list COMMA exp
   75          | error COMMA exp
   76          | error NEWLINE

   77 field-list: ID EQ exp
   78           | field-list COMMA ID EQ exp
   79           | error COMMA ID EQ exp
   80           | error NEWLINE

   81 lvalue: ID
   82       | lvalue DOT ID
   83       | lvalue LBRACK exp RBRACK
   84       | error DOT ID
   85       | lvalue LBRACK error RBRACK
   86       | error NEWLINE

   87 declaration-list: declaration
   88                 | declaration-list declaration
   89                 | error NEWLINE

   90 declaration: type-declaration
   91            | variable-declaration
   92            | function-declaration
   93            | error NEWLINE

   94 type-declaration: type ID EQ type
   95                 | error NEWLINE

   96 type: ID
   97     | INT
   98     | TYPE
   99     | STRING
  100     | LBRACE type-fields RBRACE
  101     | LBRACE RBRACE
  102     | ARRAY OF ID
  103     | error NEWLINE

  104 type-fields: type-field
  105            | type-fields COMMA type-field
  106            | error COMMA type-field
  107            | error NEWLINE

  108 type-field: ID COLON ID

  109 variable-declaration: VAR ID ASSIGN exp
  110                     | VAR ID COLON ID ASSIGN exp
  111                     | error NEWLINE

  112 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ exp
  113                     | FUNCTION ID LPAREN RPAREN EQ exp
  114                     | FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ exp
  115                     | FUNCTION ID LPAREN RPAREN COLON ID EQ exp
  116                     | FUNCTION ID LPAREN error RPAREN EQ exp
  117                     | FUNCTION ID LPAREN error RPAREN COLON ID EQ exp
  118                     | error NEWLINE


Terminals, with rules where they appear

$end (0) 0
error (256) 5 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 66 67 68 71 72 75 76 79 80 84 85 86
    89 93 95 103 106 107 111 116 117 118
ID (258) 25 26 29 30 31 35 62 63 64 77 78 79 81 82 84 94 96 102 108
    109 110 112 113 114 115 116 117
STRING (259) 6 99
INT (260) 7 97
COMMA (261) 74 75 78 79 105 106
COLON (262) 108 110 114 115 117
SEMICOLON (263) 70 71
LPAREN (264) 25 26 27 28 112 113 114 115 116 117
RPAREN (265) 25 26 27 28 112 113 114 115 116 117
LBRACK (266) 31 83 85
RBRACK (267) 31 83 85
LBRACE (268) 29 30 100 101
RBRACE (269) 29 30 100 101
DOT (270) 82 84
ARRAY (271) 102
IF (272) 32 33 55 56 57 58 59 60
THEN (273) 32 33 55 56 57 58 59 60
ELSE (274) 33 58 59 60
WHILE (275) 34 61
FOR (276) 35 62 63 64
TO (277) 35 62 63 64
DO (278) 34 35 61 62 63 64
LET (279) 37 38 65 66 67
IN (280) 37 38 65 66 67
END (281) 37 38 65 66 67
OF (282) 31 102
BREAK (283) 36
NIL (284) 8
FUNCTION (285) 112 113 114 115 116 117
VAR (286) 109 110
NEWLINE (287) 3 4 5 68 72 76 80 86 89 93 95 103 107 111 118
TYPE (288) 98
NUMBER (289)
ASSIGN (290) 10 35 39 62 63 64 109 110
OR (291) 21 50
AND (292) 22 51
LE (293) 20 49
GE (294) 19 48
LT (295) 18 47
GT (296) 17 46
NEQ (297) 16 45
EQ (298) 15 44 77 78 79 94 112 113 114 115 116 117
MINUS (299) 12 24 41 54
PLUS (300) 11 40
DIVIDE (301) 14 43
TIMES (302) 13 42
UMINUS (303) 52
POWER (304) 23 53


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2, on right: 0 2
line (52)
    on left: 3 4 5, on right: 2
exp (53)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68, on right: 4 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 31
    32 33 34 35 39 40 41 42 43 44 45 46 47 48 49 50 51 53 55 56 58
    59 60 61 62 63 64 69 70 71 73 74 75 77 78 79 83 109 110 112 113
    114 115 116 117
expr-seq (54)
    on left: 69 70 71 72, on right: 27 37 65 70
expr-list (55)
    on left: 73 74 75 76, on right: 25 74
field-list (56)
    on left: 77 78 79 80, on right: 29 78
lvalue (57)
    on left: 81 82 83 84 85 86, on right: 9 10 82 83 85
declaration-list (58)
    on left: 87 88 89, on right: 37 38 66 88
declaration (59)
    on left: 90 91 92 93, on right: 87 88
type-declaration (60)
    on left: 94 95, on right: 90
type (61)
    on left: 96 97 98 99 100 101 102 103, on right: 94
type-fields (62)
    on left: 104 105 106 107, on right: 100 105 112 114
type-field (63)
    on left: 108, on right: 104 105 106
variable-declaration (64)
    on left: 109 110 111, on right: 91
function-declaration (65)
    on left: 112 113 114 115 116 117 118, on right: 92


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . line

    $end     shift, and go to state 2
    error    shift, and go to state 3
    ID       shift, and go to state 4
    STRING   shift, and go to state 5
    INT      shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    LET      shift, and go to state 11
    BREAK    shift, and go to state 12
    NIL      shift, and go to state 13
    NEWLINE  shift, and go to state 14
    MINUS    shift, and go to state 15
    UMINUS   shift, and go to state 16

    line    go to state 17
    exp     go to state 18
    lvalue  go to state 19


State 2

    0 $accept: program $end .

    $default  accept


State 3

    5 line: error . NEWLINE
   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 21
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 4

   25 exp: ID . LPAREN expr-list RPAREN
   26    | ID . LPAREN RPAREN
   29    | ID . LBRACE field-list RBRACE
   30    | ID . LBRACE RBRACE
   31    | ID . LBRACK exp RBRACK OF exp
   81 lvalue: ID .

    LPAREN  shift, and go to state 36
    LBRACK  shift, and go to state 37
    LBRACE  shift, and go to state 38

    LBRACK    [reduce using rule 81 (lvalue)]
    LBRACE    [reduce using rule 81 (lvalue)]
    $default  reduce using rule 81 (lvalue)


State 5

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


State 6

    7 exp: INT .

    $default  reduce using rule 7 (exp)


State 7

   27 exp: LPAREN . expr-seq RPAREN
   28    | LPAREN . RPAREN

    error   shift, and go to state 39
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    RPAREN  shift, and go to state 40
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp       go to state 41
    expr-seq  go to state 42
    lvalue    go to state 19


State 8

   32 exp: IF . exp THEN exp
   33    | IF . exp THEN exp ELSE exp
   55    | IF . error THEN exp
   56    | IF . exp THEN error
   57    | IF . error THEN error
   58    | IF . error THEN exp ELSE exp
   59    | IF . exp THEN error ELSE exp
   60    | IF . exp THEN exp ELSE error

    error   shift, and go to state 43
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 44
    lvalue  go to state 19


State 9

   34 exp: WHILE . exp DO exp
   61    | WHILE . error DO exp

    error   shift, and go to state 45
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 46
    lvalue  go to state 19


State 10

   35 exp: FOR . ID ASSIGN exp TO exp DO exp
   62    | FOR . ID ASSIGN error TO exp DO exp
   63    | FOR . ID ASSIGN exp TO error DO exp
   64    | FOR . ID ASSIGN exp TO exp DO error

    ID  shift, and go to state 47


State 11

   37 exp: LET . declaration-list IN expr-seq END
   38    | LET . declaration-list IN END
   65    | LET . error IN expr-seq END
   66    | LET . declaration-list IN error END
   67    | LET . error IN error END

    error     shift, and go to state 48
    ID        shift, and go to state 49
    STRING    shift, and go to state 50
    INT       shift, and go to state 51
    LBRACE    shift, and go to state 52
    ARRAY     shift, and go to state 53
    FUNCTION  shift, and go to state 54
    VAR       shift, and go to state 55
    TYPE      shift, and go to state 56

    declaration-list      go to state 57
    declaration           go to state 58
    type-declaration      go to state 59
    type                  go to state 60
    variable-declaration  go to state 61
    function-declaration  go to state 62


State 12

   36 exp: BREAK .

    $default  reduce using rule 36 (exp)


State 13

    8 exp: NIL .

    $default  reduce using rule 8 (exp)


State 14

    3 line: NEWLINE .

    $default  reduce using rule 3 (line)


State 15

   24 exp: MINUS . exp
   54    | MINUS . error

    error   shift, and go to state 63
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 64
    lvalue  go to state 19


State 16

   52 exp: UMINUS . error

    error  shift, and go to state 65


State 17

    2 program: program line .

    $default  reduce using rule 2 (program)


State 18

    4 line: exp . NEWLINE
   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    NEWLINE  shift, and go to state 66
    OR       shift, and go to state 67
    AND      shift, and go to state 68
    LE       shift, and go to state 69
    GE       shift, and go to state 70
    LT       shift, and go to state 71
    GT       shift, and go to state 72
    NEQ      shift, and go to state 73
    EQ       shift, and go to state 74
    MINUS    shift, and go to state 75
    PLUS     shift, and go to state 76
    DIVIDE   shift, and go to state 77
    TIMES    shift, and go to state 78
    POWER    shift, and go to state 79


State 19

    9 exp: lvalue .
   10    | lvalue . ASSIGN exp
   82 lvalue: lvalue . DOT ID
   83       | lvalue . LBRACK exp RBRACK
   85       | lvalue . LBRACK error RBRACK

    LBRACK  shift, and go to state 80
    DOT     shift, and go to state 81
    ASSIGN  shift, and go to state 82

    $default  reduce using rule 9 (exp)


State 20

   84 lvalue: error DOT . ID

    ID  shift, and go to state 83


State 21

    5 line: error NEWLINE .
   68 exp: error NEWLINE .
   86 lvalue: error NEWLINE .

    LBRACK    reduce using rule 86 (lvalue)
    DOT       reduce using rule 86 (lvalue)
    NEWLINE   reduce using rule 5 (line)
    NEWLINE   [reduce using rule 68 (exp)]
    NEWLINE   [reduce using rule 86 (lvalue)]
    ASSIGN    reduce using rule 86 (lvalue)
    OR        reduce using rule 68 (exp)
    OR        [reduce using rule 86 (lvalue)]
    AND       reduce using rule 68 (exp)
    AND       [reduce using rule 86 (lvalue)]
    LE        reduce using rule 68 (exp)
    LE        [reduce using rule 86 (lvalue)]
    GE        reduce using rule 68 (exp)
    GE        [reduce using rule 86 (lvalue)]
    LT        reduce using rule 68 (exp)
    LT        [reduce using rule 86 (lvalue)]
    GT        reduce using rule 68 (exp)
    GT        [reduce using rule 86 (lvalue)]
    NEQ       reduce using rule 68 (exp)
    NEQ       [reduce using rule 86 (lvalue)]
    EQ        reduce using rule 68 (exp)
    EQ        [reduce using rule 86 (lvalue)]
    MINUS     reduce using rule 5 (line)
    MINUS     [reduce using rule 68 (exp)]
    MINUS     [reduce using rule 86 (lvalue)]
    PLUS      reduce using rule 68 (exp)
    PLUS      [reduce using rule 86 (lvalue)]
    DIVIDE    reduce using rule 68 (exp)
    DIVIDE    [reduce using rule 86 (lvalue)]
    TIMES     reduce using rule 68 (exp)
    TIMES     [reduce using rule 86 (lvalue)]
    POWER     reduce using rule 68 (exp)
    POWER     [reduce using rule 86 (lvalue)]
    $default  reduce using rule 5 (line)


State 22

   39 exp: error ASSIGN . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 85
    lvalue  go to state 19


State 23

   50 exp: error OR . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 86
    lvalue  go to state 19


State 24

   51 exp: error AND . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 87
    lvalue  go to state 19


State 25

   49 exp: error LE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 88
    lvalue  go to state 19


State 26

   48 exp: error GE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 89
    lvalue  go to state 19


State 27

   47 exp: error LT . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 90
    lvalue  go to state 19


State 28

   46 exp: error GT . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 91
    lvalue  go to state 19


State 29

   45 exp: error NEQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 92
    lvalue  go to state 19


State 30

   44 exp: error EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 93
    lvalue  go to state 19


State 31

   41 exp: error MINUS . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 94
    lvalue  go to state 19


State 32

   40 exp: error PLUS . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 95
    lvalue  go to state 19


State 33

   43 exp: error DIVIDE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 96
    lvalue  go to state 19


State 34

   42 exp: error TIMES . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 97
    lvalue  go to state 19


State 35

   53 exp: error POWER . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 98
    lvalue  go to state 19


State 36

   25 exp: ID LPAREN . expr-list RPAREN
   26    | ID LPAREN . RPAREN

    error   shift, and go to state 99
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    RPAREN  shift, and go to state 100
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp        go to state 101
    expr-list  go to state 102
    lvalue     go to state 19


State 37

   31 exp: ID LBRACK . exp RBRACK OF exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 103
    lvalue  go to state 19


State 38

   29 exp: ID LBRACE . field-list RBRACE
   30    | ID LBRACE . RBRACE

    error   shift, and go to state 104
    ID      shift, and go to state 105
    RBRACE  shift, and go to state 106

    field-list  go to state 107


State 39

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   68    | error . NEWLINE
   71 expr-seq: error . SEMICOLON exp
   72         | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    SEMICOLON  shift, and go to state 108
    DOT        shift, and go to state 20
    NEWLINE    shift, and go to state 109
    ASSIGN     shift, and go to state 22
    OR         shift, and go to state 23
    AND        shift, and go to state 24
    LE         shift, and go to state 25
    GE         shift, and go to state 26
    LT         shift, and go to state 27
    GT         shift, and go to state 28
    NEQ        shift, and go to state 29
    EQ         shift, and go to state 30
    MINUS      shift, and go to state 31
    PLUS       shift, and go to state 32
    DIVIDE     shift, and go to state 33
    TIMES      shift, and go to state 34
    POWER      shift, and go to state 35


State 40

   28 exp: LPAREN RPAREN .

    $default  reduce using rule 28 (exp)


State 41

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   69 expr-seq: exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 69 (expr-seq)


State 42

   27 exp: LPAREN expr-seq . RPAREN
   70 expr-seq: expr-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 110
    RPAREN     shift, and go to state 111


State 43

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   55    | IF error . THEN exp
   57    | IF error . THEN error
   58    | IF error . THEN exp ELSE exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    THEN     shift, and go to state 112
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 44

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   32    | IF exp . THEN exp
   33    | IF exp . THEN exp ELSE exp
   56    | IF exp . THEN error
   59    | IF exp . THEN error ELSE exp
   60    | IF exp . THEN exp ELSE error

    THEN    shift, and go to state 114
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 45

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   61    | WHILE error . DO exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    DO       shift, and go to state 115
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 46

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   34    | WHILE exp . DO exp

    DO      shift, and go to state 116
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 47

   35 exp: FOR ID . ASSIGN exp TO exp DO exp
   62    | FOR ID . ASSIGN error TO exp DO exp
   63    | FOR ID . ASSIGN exp TO error DO exp
   64    | FOR ID . ASSIGN exp TO exp DO error

    ASSIGN  shift, and go to state 117


State 48

   65 exp: LET error . IN expr-seq END
   67    | LET error . IN error END
   89 declaration-list: error . NEWLINE
   93 declaration: error . NEWLINE
   95 type-declaration: error . NEWLINE
  103 type: error . NEWLINE
  111 variable-declaration: error . NEWLINE
  118 function-declaration: error . NEWLINE

    IN       shift, and go to state 118
    NEWLINE  shift, and go to state 119


State 49

   96 type: ID .

    $default  reduce using rule 96 (type)


State 50

   99 type: STRING .

    $default  reduce using rule 99 (type)


State 51

   97 type: INT .

    $default  reduce using rule 97 (type)


State 52

  100 type: LBRACE . type-fields RBRACE
  101     | LBRACE . RBRACE

    error   shift, and go to state 120
    ID      shift, and go to state 121
    RBRACE  shift, and go to state 122

    type-fields  go to state 123
    type-field   go to state 124


State 53

  102 type: ARRAY . OF ID

    OF  shift, and go to state 125


State 54

  112 function-declaration: FUNCTION . ID LPAREN type-fields RPAREN EQ exp
  113                     | FUNCTION . ID LPAREN RPAREN EQ exp
  114                     | FUNCTION . ID LPAREN type-fields RPAREN COLON ID EQ exp
  115                     | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp
  116                     | FUNCTION . ID LPAREN error RPAREN EQ exp
  117                     | FUNCTION . ID LPAREN error RPAREN COLON ID EQ exp

    ID  shift, and go to state 126


State 55

  109 variable-declaration: VAR . ID ASSIGN exp
  110                     | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 127


State 56

   98 type: TYPE .

    $default  reduce using rule 98 (type)


State 57

   37 exp: LET declaration-list . IN expr-seq END
   38    | LET declaration-list . IN END
   66    | LET declaration-list . IN error END
   88 declaration-list: declaration-list . declaration

    error     shift, and go to state 128
    ID        shift, and go to state 49
    STRING    shift, and go to state 50
    INT       shift, and go to state 51
    LBRACE    shift, and go to state 52
    ARRAY     shift, and go to state 53
    IN        shift, and go to state 129
    FUNCTION  shift, and go to state 54
    VAR       shift, and go to state 55
    TYPE      shift, and go to state 56

    declaration           go to state 130
    type-declaration      go to state 59
    type                  go to state 60
    variable-declaration  go to state 61
    function-declaration  go to state 62


State 58

   87 declaration-list: declaration .

    $default  reduce using rule 87 (declaration-list)


State 59

   90 declaration: type-declaration .

    $default  reduce using rule 90 (declaration)


State 60

   94 type-declaration: type . ID EQ type

    ID  shift, and go to state 131


State 61

   91 declaration: variable-declaration .

    $default  reduce using rule 91 (declaration)


State 62

   92 declaration: function-declaration .

    $default  reduce using rule 92 (declaration)


State 63

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   54    | MINUS error .
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    POWER    shift, and go to state 35

    NEWLINE   [reduce using rule 54 (exp)]
    $default  reduce using rule 54 (exp)


State 64

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   24    | MINUS exp .

    POWER  shift, and go to state 79

    $default  reduce using rule 24 (exp)


State 65

   52 exp: UMINUS error .

    $default  reduce using rule 52 (exp)


State 66

    4 line: exp NEWLINE .

    $default  reduce using rule 4 (line)


State 67

   21 exp: exp OR . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 132
    lvalue  go to state 19


State 68

   22 exp: exp AND . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 133
    lvalue  go to state 19


State 69

   20 exp: exp LE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 134
    lvalue  go to state 19


State 70

   19 exp: exp GE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 135
    lvalue  go to state 19


State 71

   18 exp: exp LT . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 136
    lvalue  go to state 19


State 72

   17 exp: exp GT . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 137
    lvalue  go to state 19


State 73

   16 exp: exp NEQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 138
    lvalue  go to state 19


State 74

   15 exp: exp EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 139
    lvalue  go to state 19


State 75

   12 exp: exp MINUS . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 140
    lvalue  go to state 19


State 76

   11 exp: exp PLUS . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 141
    lvalue  go to state 19


State 77

   14 exp: exp DIVIDE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 142
    lvalue  go to state 19


State 78

   13 exp: exp TIMES . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 143
    lvalue  go to state 19


State 79

   23 exp: exp POWER . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 144
    lvalue  go to state 19


State 80

   83 lvalue: lvalue LBRACK . exp RBRACK
   85       | lvalue LBRACK . error RBRACK

    error   shift, and go to state 145
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 146
    lvalue  go to state 19


State 81

   82 lvalue: lvalue DOT . ID

    ID  shift, and go to state 147


State 82

   10 exp: lvalue ASSIGN . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 148
    lvalue  go to state 19


State 83

   84 lvalue: error DOT ID .

    $default  reduce using rule 84 (lvalue)


State 84

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 85

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   39    | error ASSIGN exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 39 (exp)


State 86

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   50    | error OR exp .

    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 50 (exp)


State 87

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   51    | error AND exp .

    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 51 (exp)


State 88

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   49    | error LE exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 49 (exp)


State 89

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   48    | error GE exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 48 (exp)


State 90

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   47    | error LT exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 47 (exp)


State 91

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   46    | error GT exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 46 (exp)


State 92

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   45    | error NEQ exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 45 (exp)


State 93

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   44    | error EQ exp .

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 44 (exp)


State 94

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   41    | error MINUS exp .

    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 41 (exp)


State 95

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   40    | error PLUS exp .

    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 40 (exp)


State 96

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   43    | error DIVIDE exp .

    POWER  shift, and go to state 79

    $default  reduce using rule 43 (exp)


State 97

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   42    | error TIMES exp .

    POWER  shift, and go to state 79

    $default  reduce using rule 42 (exp)


State 98

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   53    | error POWER exp .

    POWER  shift, and go to state 79

    $default  reduce using rule 53 (exp)


State 99

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   68    | error . NEWLINE
   75 expr-list: error . COMMA exp
   76          | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    COMMA    shift, and go to state 149
    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 150
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 100

   26 exp: ID LPAREN RPAREN .

    $default  reduce using rule 26 (exp)


State 101

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   73 expr-list: exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 73 (expr-list)


State 102

   25 exp: ID LPAREN expr-list . RPAREN
   74 expr-list: expr-list . COMMA exp

    COMMA   shift, and go to state 151
    RPAREN  shift, and go to state 152


State 103

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   31    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 153
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 104

   79 field-list: error . COMMA ID EQ exp
   80           | error . NEWLINE

    COMMA    shift, and go to state 154
    NEWLINE  shift, and go to state 155


State 105

   77 field-list: ID . EQ exp

    EQ  shift, and go to state 156


State 106

   30 exp: ID LBRACE RBRACE .

    $default  reduce using rule 30 (exp)


State 107

   29 exp: ID LBRACE field-list . RBRACE
   78 field-list: field-list . COMMA ID EQ exp

    COMMA   shift, and go to state 157
    RBRACE  shift, and go to state 158


State 108

   71 expr-seq: error SEMICOLON . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 159
    lvalue  go to state 19


State 109

   68 exp: error NEWLINE .
   72 expr-seq: error NEWLINE .
   86 lvalue: error NEWLINE .

    SEMICOLON  reduce using rule 68 (exp)
    SEMICOLON  [reduce using rule 72 (expr-seq)]
    SEMICOLON  [reduce using rule 86 (lvalue)]
    RPAREN     reduce using rule 68 (exp)
    RPAREN     [reduce using rule 72 (expr-seq)]
    RPAREN     [reduce using rule 86 (lvalue)]
    LBRACK     reduce using rule 86 (lvalue)
    DOT        reduce using rule 86 (lvalue)
    END        reduce using rule 68 (exp)
    END        [reduce using rule 72 (expr-seq)]
    END        [reduce using rule 86 (lvalue)]
    ASSIGN     reduce using rule 86 (lvalue)
    OR         reduce using rule 68 (exp)
    OR         [reduce using rule 86 (lvalue)]
    AND        reduce using rule 68 (exp)
    AND        [reduce using rule 86 (lvalue)]
    LE         reduce using rule 68 (exp)
    LE         [reduce using rule 86 (lvalue)]
    GE         reduce using rule 68 (exp)
    GE         [reduce using rule 86 (lvalue)]
    LT         reduce using rule 68 (exp)
    LT         [reduce using rule 86 (lvalue)]
    GT         reduce using rule 68 (exp)
    GT         [reduce using rule 86 (lvalue)]
    NEQ        reduce using rule 68 (exp)
    NEQ        [reduce using rule 86 (lvalue)]
    EQ         reduce using rule 68 (exp)
    EQ         [reduce using rule 86 (lvalue)]
    MINUS      reduce using rule 68 (exp)
    MINUS      [reduce using rule 86 (lvalue)]
    PLUS       reduce using rule 68 (exp)
    PLUS       [reduce using rule 86 (lvalue)]
    DIVIDE     reduce using rule 68 (exp)
    DIVIDE     [reduce using rule 86 (lvalue)]
    TIMES      reduce using rule 68 (exp)
    TIMES      [reduce using rule 86 (lvalue)]
    POWER      reduce using rule 68 (exp)
    POWER      [reduce using rule 86 (lvalue)]
    $default   reduce using rule 68 (exp)


State 110

   70 expr-seq: expr-seq SEMICOLON . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 160
    lvalue  go to state 19


State 111

   27 exp: LPAREN expr-seq RPAREN .

    $default  reduce using rule 27 (exp)


State 112

   55 exp: IF error THEN . exp
   57    | IF error THEN . error
   58    | IF error THEN . exp ELSE exp

    error   shift, and go to state 161
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 162
    lvalue  go to state 19


State 113

   68 exp: error NEWLINE .
   86 lvalue: error NEWLINE .

    error      reduce using rule 68 (exp)
    error      [reduce using rule 86 (lvalue)]
    ID         reduce using rule 68 (exp)
    ID         [reduce using rule 86 (lvalue)]
    STRING     reduce using rule 68 (exp)
    STRING     [reduce using rule 86 (lvalue)]
    INT        reduce using rule 68 (exp)
    INT        [reduce using rule 86 (lvalue)]
    COMMA      reduce using rule 68 (exp)
    COMMA      [reduce using rule 86 (lvalue)]
    SEMICOLON  reduce using rule 68 (exp)
    SEMICOLON  [reduce using rule 86 (lvalue)]
    RPAREN     reduce using rule 68 (exp)
    RPAREN     [reduce using rule 86 (lvalue)]
    LBRACK     reduce using rule 86 (lvalue)
    RBRACK     reduce using rule 68 (exp)
    RBRACK     [reduce using rule 86 (lvalue)]
    LBRACE     reduce using rule 68 (exp)
    LBRACE     [reduce using rule 86 (lvalue)]
    RBRACE     reduce using rule 68 (exp)
    RBRACE     [reduce using rule 86 (lvalue)]
    DOT        reduce using rule 86 (lvalue)
    ARRAY      reduce using rule 68 (exp)
    ARRAY      [reduce using rule 86 (lvalue)]
    THEN       reduce using rule 68 (exp)
    THEN       [reduce using rule 86 (lvalue)]
    ELSE       reduce using rule 68 (exp)
    ELSE       [reduce using rule 86 (lvalue)]
    TO         reduce using rule 68 (exp)
    TO         [reduce using rule 86 (lvalue)]
    DO         reduce using rule 68 (exp)
    DO         [reduce using rule 86 (lvalue)]
    IN         reduce using rule 68 (exp)
    IN         [reduce using rule 86 (lvalue)]
    END        reduce using rule 68 (exp)
    END        [reduce using rule 86 (lvalue)]
    FUNCTION   reduce using rule 68 (exp)
    FUNCTION   [reduce using rule 86 (lvalue)]
    VAR        reduce using rule 68 (exp)
    VAR        [reduce using rule 86 (lvalue)]
    NEWLINE    reduce using rule 68 (exp)
    NEWLINE    [reduce using rule 86 (lvalue)]
    TYPE       reduce using rule 68 (exp)
    TYPE       [reduce using rule 86 (lvalue)]
    ASSIGN     reduce using rule 86 (lvalue)
    OR         reduce using rule 68 (exp)
    OR         [reduce using rule 86 (lvalue)]
    AND        reduce using rule 68 (exp)
    AND        [reduce using rule 86 (lvalue)]
    LE         reduce using rule 68 (exp)
    LE         [reduce using rule 86 (lvalue)]
    GE         reduce using rule 68 (exp)
    GE         [reduce using rule 86 (lvalue)]
    LT         reduce using rule 68 (exp)
    LT         [reduce using rule 86 (lvalue)]
    GT         reduce using rule 68 (exp)
    GT         [reduce using rule 86 (lvalue)]
    NEQ        reduce using rule 68 (exp)
    NEQ        [reduce using rule 86 (lvalue)]
    EQ         reduce using rule 68 (exp)
    EQ         [reduce using rule 86 (lvalue)]
    MINUS      reduce using rule 68 (exp)
    MINUS      [reduce using rule 86 (lvalue)]
    PLUS       reduce using rule 68 (exp)
    PLUS       [reduce using rule 86 (lvalue)]
    DIVIDE     reduce using rule 68 (exp)
    DIVIDE     [reduce using rule 86 (lvalue)]
    TIMES      reduce using rule 68 (exp)
    TIMES      [reduce using rule 86 (lvalue)]
    POWER      reduce using rule 68 (exp)
    POWER      [reduce using rule 86 (lvalue)]
    $default   reduce using rule 68 (exp)


State 114

   32 exp: IF exp THEN . exp
   33    | IF exp THEN . exp ELSE exp
   56    | IF exp THEN . error
   59    | IF exp THEN . error ELSE exp
   60    | IF exp THEN . exp ELSE error

    error   shift, and go to state 163
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 164
    lvalue  go to state 19


State 115

   61 exp: WHILE error DO . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 165
    lvalue  go to state 19


State 116

   34 exp: WHILE exp DO . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 166
    lvalue  go to state 19


State 117

   35 exp: FOR ID ASSIGN . exp TO exp DO exp
   62    | FOR ID ASSIGN . error TO exp DO exp
   63    | FOR ID ASSIGN . exp TO error DO exp
   64    | FOR ID ASSIGN . exp TO exp DO error

    error   shift, and go to state 167
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 168
    lvalue  go to state 19


State 118

   65 exp: LET error IN . expr-seq END
   67    | LET error IN . error END

    error   shift, and go to state 169
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp       go to state 41
    expr-seq  go to state 170
    lvalue    go to state 19


State 119

   89 declaration-list: error NEWLINE .
   93 declaration: error NEWLINE .
   95 type-declaration: error NEWLINE .
  103 type: error NEWLINE .
  111 variable-declaration: error NEWLINE .
  118 function-declaration: error NEWLINE .

    error     reduce using rule 89 (declaration-list)
    error     [reduce using rule 93 (declaration)]
    error     [reduce using rule 95 (type-declaration)]
    error     [reduce using rule 111 (variable-declaration)]
    error     [reduce using rule 118 (function-declaration)]
    ID        reduce using rule 89 (declaration-list)
    ID        [reduce using rule 93 (declaration)]
    ID        [reduce using rule 95 (type-declaration)]
    ID        [reduce using rule 103 (type)]
    ID        [reduce using rule 111 (variable-declaration)]
    ID        [reduce using rule 118 (function-declaration)]
    STRING    reduce using rule 89 (declaration-list)
    STRING    [reduce using rule 93 (declaration)]
    STRING    [reduce using rule 95 (type-declaration)]
    STRING    [reduce using rule 111 (variable-declaration)]
    STRING    [reduce using rule 118 (function-declaration)]
    INT       reduce using rule 89 (declaration-list)
    INT       [reduce using rule 93 (declaration)]
    INT       [reduce using rule 95 (type-declaration)]
    INT       [reduce using rule 111 (variable-declaration)]
    INT       [reduce using rule 118 (function-declaration)]
    LBRACE    reduce using rule 89 (declaration-list)
    LBRACE    [reduce using rule 93 (declaration)]
    LBRACE    [reduce using rule 95 (type-declaration)]
    LBRACE    [reduce using rule 111 (variable-declaration)]
    LBRACE    [reduce using rule 118 (function-declaration)]
    ARRAY     reduce using rule 89 (declaration-list)
    ARRAY     [reduce using rule 93 (declaration)]
    ARRAY     [reduce using rule 95 (type-declaration)]
    ARRAY     [reduce using rule 111 (variable-declaration)]
    ARRAY     [reduce using rule 118 (function-declaration)]
    IN        reduce using rule 89 (declaration-list)
    IN        [reduce using rule 93 (declaration)]
    IN        [reduce using rule 95 (type-declaration)]
    IN        [reduce using rule 111 (variable-declaration)]
    IN        [reduce using rule 118 (function-declaration)]
    FUNCTION  reduce using rule 89 (declaration-list)
    FUNCTION  [reduce using rule 93 (declaration)]
    FUNCTION  [reduce using rule 95 (type-declaration)]
    FUNCTION  [reduce using rule 111 (variable-declaration)]
    FUNCTION  [reduce using rule 118 (function-declaration)]
    VAR       reduce using rule 89 (declaration-list)
    VAR       [reduce using rule 93 (declaration)]
    VAR       [reduce using rule 95 (type-declaration)]
    VAR       [reduce using rule 111 (variable-declaration)]
    VAR       [reduce using rule 118 (function-declaration)]
    TYPE      reduce using rule 89 (declaration-list)
    TYPE      [reduce using rule 93 (declaration)]
    TYPE      [reduce using rule 95 (type-declaration)]
    TYPE      [reduce using rule 111 (variable-declaration)]
    TYPE      [reduce using rule 118 (function-declaration)]
    $default  reduce using rule 89 (declaration-list)


State 120

  106 type-fields: error . COMMA type-field
  107            | error . NEWLINE

    COMMA    shift, and go to state 171
    NEWLINE  shift, and go to state 172


State 121

  108 type-field: ID . COLON ID

    COLON  shift, and go to state 173


State 122

  101 type: LBRACE RBRACE .

    $default  reduce using rule 101 (type)


State 123

  100 type: LBRACE type-fields . RBRACE
  105 type-fields: type-fields . COMMA type-field

    COMMA   shift, and go to state 174
    RBRACE  shift, and go to state 175


State 124

  104 type-fields: type-field .

    $default  reduce using rule 104 (type-fields)


State 125

  102 type: ARRAY OF . ID

    ID  shift, and go to state 176


State 126

  112 function-declaration: FUNCTION ID . LPAREN type-fields RPAREN EQ exp
  113                     | FUNCTION ID . LPAREN RPAREN EQ exp
  114                     | FUNCTION ID . LPAREN type-fields RPAREN COLON ID EQ exp
  115                     | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp
  116                     | FUNCTION ID . LPAREN error RPAREN EQ exp
  117                     | FUNCTION ID . LPAREN error RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 177


State 127

  109 variable-declaration: VAR ID . ASSIGN exp
  110                     | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 178
    ASSIGN  shift, and go to state 179


State 128

   93 declaration: error . NEWLINE
   95 type-declaration: error . NEWLINE
  103 type: error . NEWLINE
  111 variable-declaration: error . NEWLINE
  118 function-declaration: error . NEWLINE

    NEWLINE  shift, and go to state 180


State 129

   37 exp: LET declaration-list IN . expr-seq END
   38    | LET declaration-list IN . END
   66    | LET declaration-list IN . error END

    error   shift, and go to state 181
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    END     shift, and go to state 182
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp       go to state 41
    expr-seq  go to state 183
    lvalue    go to state 19


State 130

   88 declaration-list: declaration-list declaration .

    $default  reduce using rule 88 (declaration-list)


State 131

   94 type-declaration: type ID . EQ type

    EQ  shift, and go to state 184


State 132

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   21    | exp OR exp .
   22    | exp . AND exp
   23    | exp . POWER exp

    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 21 (exp)


State 133

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   22    | exp AND exp .
   23    | exp . POWER exp

    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 22 (exp)


State 134

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 135

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 136

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   18    | exp LT exp .
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 137

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 138

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   16    | exp NEQ exp .
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 139

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   15    | exp EQ exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 140

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   12    | exp MINUS exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 12 (exp)


State 141

   11 exp: exp . PLUS exp
   11    | exp PLUS exp .
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 11 (exp)


State 142

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   14    | exp DIVIDE exp .
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    POWER  shift, and go to state 79

    $default  reduce using rule 14 (exp)


State 143

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   13    | exp TIMES exp .
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    POWER  shift, and go to state 79

    $default  reduce using rule 13 (exp)


State 144

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   23    | exp POWER exp .

    POWER  shift, and go to state 79

    $default  reduce using rule 23 (exp)


State 145

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   85       | lvalue LBRACK error . RBRACK
   86       | error . NEWLINE

    RBRACK   shift, and go to state 185
    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 146

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   83 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 186
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 147

   82 lvalue: lvalue DOT ID .

    $default  reduce using rule 82 (lvalue)


State 148

   10 exp: lvalue ASSIGN exp .
   11    | exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 10 (exp)


State 149

   75 expr-list: error COMMA . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 187
    lvalue  go to state 19


State 150

   68 exp: error NEWLINE .
   76 expr-list: error NEWLINE .
   86 lvalue: error NEWLINE .

    COMMA     reduce using rule 68 (exp)
    COMMA     [reduce using rule 76 (expr-list)]
    COMMA     [reduce using rule 86 (lvalue)]
    RPAREN    reduce using rule 68 (exp)
    RPAREN    [reduce using rule 76 (expr-list)]
    RPAREN    [reduce using rule 86 (lvalue)]
    LBRACK    reduce using rule 86 (lvalue)
    DOT       reduce using rule 86 (lvalue)
    ASSIGN    reduce using rule 86 (lvalue)
    OR        reduce using rule 68 (exp)
    OR        [reduce using rule 86 (lvalue)]
    AND       reduce using rule 68 (exp)
    AND       [reduce using rule 86 (lvalue)]
    LE        reduce using rule 68 (exp)
    LE        [reduce using rule 86 (lvalue)]
    GE        reduce using rule 68 (exp)
    GE        [reduce using rule 86 (lvalue)]
    LT        reduce using rule 68 (exp)
    LT        [reduce using rule 86 (lvalue)]
    GT        reduce using rule 68 (exp)
    GT        [reduce using rule 86 (lvalue)]
    NEQ       reduce using rule 68 (exp)
    NEQ       [reduce using rule 86 (lvalue)]
    EQ        reduce using rule 68 (exp)
    EQ        [reduce using rule 86 (lvalue)]
    MINUS     reduce using rule 68 (exp)
    MINUS     [reduce using rule 86 (lvalue)]
    PLUS      reduce using rule 68 (exp)
    PLUS      [reduce using rule 86 (lvalue)]
    DIVIDE    reduce using rule 68 (exp)
    DIVIDE    [reduce using rule 86 (lvalue)]
    TIMES     reduce using rule 68 (exp)
    TIMES     [reduce using rule 86 (lvalue)]
    POWER     reduce using rule 68 (exp)
    POWER     [reduce using rule 86 (lvalue)]
    $default  reduce using rule 68 (exp)


State 151

   74 expr-list: expr-list COMMA . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 188
    lvalue  go to state 19


State 152

   25 exp: ID LPAREN expr-list RPAREN .

    $default  reduce using rule 25 (exp)


State 153

   31 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 189


State 154

   79 field-list: error COMMA . ID EQ exp

    ID  shift, and go to state 190


State 155

   80 field-list: error NEWLINE .

    $default  reduce using rule 80 (field-list)


State 156

   77 field-list: ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 191
    lvalue  go to state 19


State 157

   78 field-list: field-list COMMA . ID EQ exp

    ID  shift, and go to state 192


State 158

   29 exp: ID LBRACE field-list RBRACE .

    $default  reduce using rule 29 (exp)


State 159

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   71 expr-seq: error SEMICOLON exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 71 (expr-seq)


State 160

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   70 expr-seq: expr-seq SEMICOLON exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 70 (expr-seq)


State 161

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   57    | IF error THEN error .
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35

    NEWLINE   [reduce using rule 57 (exp)]
    OR        [reduce using rule 57 (exp)]
    AND       [reduce using rule 57 (exp)]
    LE        [reduce using rule 57 (exp)]
    GE        [reduce using rule 57 (exp)]
    LT        [reduce using rule 57 (exp)]
    GT        [reduce using rule 57 (exp)]
    NEQ       [reduce using rule 57 (exp)]
    EQ        [reduce using rule 57 (exp)]
    MINUS     [reduce using rule 57 (exp)]
    PLUS      [reduce using rule 57 (exp)]
    DIVIDE    [reduce using rule 57 (exp)]
    TIMES     [reduce using rule 57 (exp)]
    POWER     [reduce using rule 57 (exp)]
    $default  reduce using rule 57 (exp)


State 162

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   55    | IF error THEN exp .
   58    | IF error THEN exp . ELSE exp

    ELSE    shift, and go to state 193
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    ELSE      [reduce using rule 55 (exp)]
    OR        [reduce using rule 55 (exp)]
    AND       [reduce using rule 55 (exp)]
    LE        [reduce using rule 55 (exp)]
    GE        [reduce using rule 55 (exp)]
    LT        [reduce using rule 55 (exp)]
    GT        [reduce using rule 55 (exp)]
    NEQ       [reduce using rule 55 (exp)]
    EQ        [reduce using rule 55 (exp)]
    MINUS     [reduce using rule 55 (exp)]
    PLUS      [reduce using rule 55 (exp)]
    DIVIDE    [reduce using rule 55 (exp)]
    TIMES     [reduce using rule 55 (exp)]
    POWER     [reduce using rule 55 (exp)]
    $default  reduce using rule 55 (exp)


State 163

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   56    | IF exp THEN error .
   59    | IF exp THEN error . ELSE exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    ELSE     shift, and go to state 194
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35

    ELSE      [reduce using rule 56 (exp)]
    NEWLINE   [reduce using rule 56 (exp)]
    OR        [reduce using rule 56 (exp)]
    AND       [reduce using rule 56 (exp)]
    LE        [reduce using rule 56 (exp)]
    GE        [reduce using rule 56 (exp)]
    LT        [reduce using rule 56 (exp)]
    GT        [reduce using rule 56 (exp)]
    NEQ       [reduce using rule 56 (exp)]
    EQ        [reduce using rule 56 (exp)]
    MINUS     [reduce using rule 56 (exp)]
    PLUS      [reduce using rule 56 (exp)]
    DIVIDE    [reduce using rule 56 (exp)]
    TIMES     [reduce using rule 56 (exp)]
    POWER     [reduce using rule 56 (exp)]
    $default  reduce using rule 56 (exp)


State 164

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   32    | IF exp THEN exp .
   33    | IF exp THEN exp . ELSE exp
   60    | IF exp THEN exp . ELSE error

    ELSE    shift, and go to state 195
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    ELSE      [reduce using rule 32 (exp)]
    OR        [reduce using rule 32 (exp)]
    AND       [reduce using rule 32 (exp)]
    LE        [reduce using rule 32 (exp)]
    GE        [reduce using rule 32 (exp)]
    LT        [reduce using rule 32 (exp)]
    GT        [reduce using rule 32 (exp)]
    NEQ       [reduce using rule 32 (exp)]
    EQ        [reduce using rule 32 (exp)]
    MINUS     [reduce using rule 32 (exp)]
    PLUS      [reduce using rule 32 (exp)]
    DIVIDE    [reduce using rule 32 (exp)]
    TIMES     [reduce using rule 32 (exp)]
    POWER     [reduce using rule 32 (exp)]
    $default  reduce using rule 32 (exp)


State 165

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   61    | WHILE error DO exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 61 (exp)]
    AND       [reduce using rule 61 (exp)]
    LE        [reduce using rule 61 (exp)]
    GE        [reduce using rule 61 (exp)]
    LT        [reduce using rule 61 (exp)]
    GT        [reduce using rule 61 (exp)]
    NEQ       [reduce using rule 61 (exp)]
    EQ        [reduce using rule 61 (exp)]
    MINUS     [reduce using rule 61 (exp)]
    PLUS      [reduce using rule 61 (exp)]
    DIVIDE    [reduce using rule 61 (exp)]
    TIMES     [reduce using rule 61 (exp)]
    POWER     [reduce using rule 61 (exp)]
    $default  reduce using rule 61 (exp)


State 166

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   34    | WHILE exp DO exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 34 (exp)]
    AND       [reduce using rule 34 (exp)]
    LE        [reduce using rule 34 (exp)]
    GE        [reduce using rule 34 (exp)]
    LT        [reduce using rule 34 (exp)]
    GT        [reduce using rule 34 (exp)]
    NEQ       [reduce using rule 34 (exp)]
    EQ        [reduce using rule 34 (exp)]
    MINUS     [reduce using rule 34 (exp)]
    PLUS      [reduce using rule 34 (exp)]
    DIVIDE    [reduce using rule 34 (exp)]
    TIMES     [reduce using rule 34 (exp)]
    POWER     [reduce using rule 34 (exp)]
    $default  reduce using rule 34 (exp)


State 167

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   62    | FOR ID ASSIGN error . TO exp DO exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    TO       shift, and go to state 196
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 168

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   35    | FOR ID ASSIGN exp . TO exp DO exp
   63    | FOR ID ASSIGN exp . TO error DO exp
   64    | FOR ID ASSIGN exp . TO exp DO error

    TO      shift, and go to state 197
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 169

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   67    | LET error IN error . END
   68    | error . NEWLINE
   71 expr-seq: error . SEMICOLON exp
   72         | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    SEMICOLON  shift, and go to state 108
    DOT        shift, and go to state 20
    END        shift, and go to state 198
    NEWLINE    shift, and go to state 109
    ASSIGN     shift, and go to state 22
    OR         shift, and go to state 23
    AND        shift, and go to state 24
    LE         shift, and go to state 25
    GE         shift, and go to state 26
    LT         shift, and go to state 27
    GT         shift, and go to state 28
    NEQ        shift, and go to state 29
    EQ         shift, and go to state 30
    MINUS      shift, and go to state 31
    PLUS       shift, and go to state 32
    DIVIDE     shift, and go to state 33
    TIMES      shift, and go to state 34
    POWER      shift, and go to state 35


State 170

   65 exp: LET error IN expr-seq . END
   70 expr-seq: expr-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 110
    END        shift, and go to state 199


State 171

  106 type-fields: error COMMA . type-field

    ID  shift, and go to state 121

    type-field  go to state 200


State 172

  107 type-fields: error NEWLINE .

    $default  reduce using rule 107 (type-fields)


State 173

  108 type-field: ID COLON . ID

    ID  shift, and go to state 201


State 174

  105 type-fields: type-fields COMMA . type-field

    ID  shift, and go to state 121

    type-field  go to state 202


State 175

  100 type: LBRACE type-fields RBRACE .

    $default  reduce using rule 100 (type)


State 176

  102 type: ARRAY OF ID .

    $default  reduce using rule 102 (type)


State 177

  112 function-declaration: FUNCTION ID LPAREN . type-fields RPAREN EQ exp
  113                     | FUNCTION ID LPAREN . RPAREN EQ exp
  114                     | FUNCTION ID LPAREN . type-fields RPAREN COLON ID EQ exp
  115                     | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp
  116                     | FUNCTION ID LPAREN . error RPAREN EQ exp
  117                     | FUNCTION ID LPAREN . error RPAREN COLON ID EQ exp

    error   shift, and go to state 203
    ID      shift, and go to state 121
    RPAREN  shift, and go to state 204

    type-fields  go to state 205
    type-field   go to state 124


State 178

  110 variable-declaration: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 206


State 179

  109 variable-declaration: VAR ID ASSIGN . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 207
    lvalue  go to state 19


State 180

   93 declaration: error NEWLINE .
   95 type-declaration: error NEWLINE .
  103 type: error NEWLINE .
  111 variable-declaration: error NEWLINE .
  118 function-declaration: error NEWLINE .

    error     reduce using rule 93 (declaration)
    error     [reduce using rule 95 (type-declaration)]
    error     [reduce using rule 111 (variable-declaration)]
    error     [reduce using rule 118 (function-declaration)]
    ID        reduce using rule 93 (declaration)
    ID        [reduce using rule 95 (type-declaration)]
    ID        [reduce using rule 103 (type)]
    ID        [reduce using rule 111 (variable-declaration)]
    ID        [reduce using rule 118 (function-declaration)]
    STRING    reduce using rule 93 (declaration)
    STRING    [reduce using rule 95 (type-declaration)]
    STRING    [reduce using rule 111 (variable-declaration)]
    STRING    [reduce using rule 118 (function-declaration)]
    INT       reduce using rule 93 (declaration)
    INT       [reduce using rule 95 (type-declaration)]
    INT       [reduce using rule 111 (variable-declaration)]
    INT       [reduce using rule 118 (function-declaration)]
    LBRACE    reduce using rule 93 (declaration)
    LBRACE    [reduce using rule 95 (type-declaration)]
    LBRACE    [reduce using rule 111 (variable-declaration)]
    LBRACE    [reduce using rule 118 (function-declaration)]
    ARRAY     reduce using rule 93 (declaration)
    ARRAY     [reduce using rule 95 (type-declaration)]
    ARRAY     [reduce using rule 111 (variable-declaration)]
    ARRAY     [reduce using rule 118 (function-declaration)]
    IN        reduce using rule 93 (declaration)
    IN        [reduce using rule 95 (type-declaration)]
    IN        [reduce using rule 111 (variable-declaration)]
    IN        [reduce using rule 118 (function-declaration)]
    FUNCTION  reduce using rule 93 (declaration)
    FUNCTION  [reduce using rule 95 (type-declaration)]
    FUNCTION  [reduce using rule 111 (variable-declaration)]
    FUNCTION  [reduce using rule 118 (function-declaration)]
    VAR       reduce using rule 93 (declaration)
    VAR       [reduce using rule 95 (type-declaration)]
    VAR       [reduce using rule 111 (variable-declaration)]
    VAR       [reduce using rule 118 (function-declaration)]
    TYPE      reduce using rule 93 (declaration)
    TYPE      [reduce using rule 95 (type-declaration)]
    TYPE      [reduce using rule 111 (variable-declaration)]
    TYPE      [reduce using rule 118 (function-declaration)]
    $default  reduce using rule 93 (declaration)


State 181

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   66    | LET declaration-list IN error . END
   68    | error . NEWLINE
   71 expr-seq: error . SEMICOLON exp
   72         | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    SEMICOLON  shift, and go to state 108
    DOT        shift, and go to state 20
    END        shift, and go to state 208
    NEWLINE    shift, and go to state 109
    ASSIGN     shift, and go to state 22
    OR         shift, and go to state 23
    AND        shift, and go to state 24
    LE         shift, and go to state 25
    GE         shift, and go to state 26
    LT         shift, and go to state 27
    GT         shift, and go to state 28
    NEQ        shift, and go to state 29
    EQ         shift, and go to state 30
    MINUS      shift, and go to state 31
    PLUS       shift, and go to state 32
    DIVIDE     shift, and go to state 33
    TIMES      shift, and go to state 34
    POWER      shift, and go to state 35


State 182

   38 exp: LET declaration-list IN END .

    $default  reduce using rule 38 (exp)


State 183

   37 exp: LET declaration-list IN expr-seq . END
   70 expr-seq: expr-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 110
    END        shift, and go to state 209


State 184

   94 type-declaration: type ID EQ . type

    error   shift, and go to state 210
    ID      shift, and go to state 49
    STRING  shift, and go to state 50
    INT     shift, and go to state 51
    LBRACE  shift, and go to state 52
    ARRAY   shift, and go to state 53
    TYPE    shift, and go to state 56

    type  go to state 211


State 185

   85 lvalue: lvalue LBRACK error RBRACK .

    $default  reduce using rule 85 (lvalue)


State 186

   83 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 83 (lvalue)


State 187

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   75 expr-list: error COMMA exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 75 (expr-list)


State 188

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   74 expr-list: expr-list COMMA exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 74 (expr-list)


State 189

   31 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 212
    lvalue  go to state 19


State 190

   79 field-list: error COMMA ID . EQ exp

    EQ  shift, and go to state 213


State 191

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   77 field-list: ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 77 (field-list)


State 192

   78 field-list: field-list COMMA ID . EQ exp

    EQ  shift, and go to state 214


State 193

   58 exp: IF error THEN exp ELSE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 215
    lvalue  go to state 19


State 194

   59 exp: IF exp THEN error ELSE . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 216
    lvalue  go to state 19


State 195

   33 exp: IF exp THEN exp ELSE . exp
   60    | IF exp THEN exp ELSE . error

    error   shift, and go to state 217
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 218
    lvalue  go to state 19


State 196

   62 exp: FOR ID ASSIGN error TO . exp DO exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 219
    lvalue  go to state 19


State 197

   35 exp: FOR ID ASSIGN exp TO . exp DO exp
   63    | FOR ID ASSIGN exp TO . error DO exp
   64    | FOR ID ASSIGN exp TO . exp DO error

    error   shift, and go to state 220
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 221
    lvalue  go to state 19


State 198

   67 exp: LET error IN error END .

    $default  reduce using rule 67 (exp)


State 199

   65 exp: LET error IN expr-seq END .

    $default  reduce using rule 65 (exp)


State 200

  106 type-fields: error COMMA type-field .

    $default  reduce using rule 106 (type-fields)


State 201

  108 type-field: ID COLON ID .

    $default  reduce using rule 108 (type-field)


State 202

  105 type-fields: type-fields COMMA type-field .

    $default  reduce using rule 105 (type-fields)


State 203

  106 type-fields: error . COMMA type-field
  107            | error . NEWLINE
  116 function-declaration: FUNCTION ID LPAREN error . RPAREN EQ exp
  117                     | FUNCTION ID LPAREN error . RPAREN COLON ID EQ exp

    COMMA    shift, and go to state 171
    RPAREN   shift, and go to state 222
    NEWLINE  shift, and go to state 172


State 204

  113 function-declaration: FUNCTION ID LPAREN RPAREN . EQ exp
  115                     | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 223
    EQ     shift, and go to state 224


State 205

  105 type-fields: type-fields . COMMA type-field
  112 function-declaration: FUNCTION ID LPAREN type-fields . RPAREN EQ exp
  114                     | FUNCTION ID LPAREN type-fields . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 174
    RPAREN  shift, and go to state 225


State 206

  110 variable-declaration: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 226


State 207

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  109 variable-declaration: VAR ID ASSIGN exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 109 (variable-declaration)


State 208

   66 exp: LET declaration-list IN error END .

    $default  reduce using rule 66 (exp)


State 209

   37 exp: LET declaration-list IN expr-seq END .

    $default  reduce using rule 37 (exp)


State 210

  103 type: error . NEWLINE

    NEWLINE  shift, and go to state 227


State 211

   94 type-declaration: type ID EQ type .

    $default  reduce using rule 94 (type-declaration)


State 212

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   31    | ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 31 (exp)]
    AND       [reduce using rule 31 (exp)]
    LE        [reduce using rule 31 (exp)]
    GE        [reduce using rule 31 (exp)]
    LT        [reduce using rule 31 (exp)]
    GT        [reduce using rule 31 (exp)]
    NEQ       [reduce using rule 31 (exp)]
    EQ        [reduce using rule 31 (exp)]
    MINUS     [reduce using rule 31 (exp)]
    PLUS      [reduce using rule 31 (exp)]
    DIVIDE    [reduce using rule 31 (exp)]
    TIMES     [reduce using rule 31 (exp)]
    POWER     [reduce using rule 31 (exp)]
    $default  reduce using rule 31 (exp)


State 213

   79 field-list: error COMMA ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 228
    lvalue  go to state 19


State 214

   78 field-list: field-list COMMA ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 229
    lvalue  go to state 19


State 215

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   58    | IF error THEN exp ELSE exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 58 (exp)]
    AND       [reduce using rule 58 (exp)]
    LE        [reduce using rule 58 (exp)]
    GE        [reduce using rule 58 (exp)]
    LT        [reduce using rule 58 (exp)]
    GT        [reduce using rule 58 (exp)]
    NEQ       [reduce using rule 58 (exp)]
    EQ        [reduce using rule 58 (exp)]
    MINUS     [reduce using rule 58 (exp)]
    PLUS      [reduce using rule 58 (exp)]
    DIVIDE    [reduce using rule 58 (exp)]
    TIMES     [reduce using rule 58 (exp)]
    POWER     [reduce using rule 58 (exp)]
    $default  reduce using rule 58 (exp)


State 216

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   59    | IF exp THEN error ELSE exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 59 (exp)]
    AND       [reduce using rule 59 (exp)]
    LE        [reduce using rule 59 (exp)]
    GE        [reduce using rule 59 (exp)]
    LT        [reduce using rule 59 (exp)]
    GT        [reduce using rule 59 (exp)]
    NEQ       [reduce using rule 59 (exp)]
    EQ        [reduce using rule 59 (exp)]
    MINUS     [reduce using rule 59 (exp)]
    PLUS      [reduce using rule 59 (exp)]
    DIVIDE    [reduce using rule 59 (exp)]
    TIMES     [reduce using rule 59 (exp)]
    POWER     [reduce using rule 59 (exp)]
    $default  reduce using rule 59 (exp)


State 217

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   60    | IF exp THEN exp ELSE error .
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35

    NEWLINE   [reduce using rule 60 (exp)]
    OR        [reduce using rule 60 (exp)]
    AND       [reduce using rule 60 (exp)]
    LE        [reduce using rule 60 (exp)]
    GE        [reduce using rule 60 (exp)]
    LT        [reduce using rule 60 (exp)]
    GT        [reduce using rule 60 (exp)]
    NEQ       [reduce using rule 60 (exp)]
    EQ        [reduce using rule 60 (exp)]
    MINUS     [reduce using rule 60 (exp)]
    PLUS      [reduce using rule 60 (exp)]
    DIVIDE    [reduce using rule 60 (exp)]
    TIMES     [reduce using rule 60 (exp)]
    POWER     [reduce using rule 60 (exp)]
    $default  reduce using rule 60 (exp)


State 218

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   33    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 33 (exp)]
    AND       [reduce using rule 33 (exp)]
    LE        [reduce using rule 33 (exp)]
    GE        [reduce using rule 33 (exp)]
    LT        [reduce using rule 33 (exp)]
    GT        [reduce using rule 33 (exp)]
    NEQ       [reduce using rule 33 (exp)]
    EQ        [reduce using rule 33 (exp)]
    MINUS     [reduce using rule 33 (exp)]
    PLUS      [reduce using rule 33 (exp)]
    DIVIDE    [reduce using rule 33 (exp)]
    TIMES     [reduce using rule 33 (exp)]
    POWER     [reduce using rule 33 (exp)]
    $default  reduce using rule 33 (exp)


State 219

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   62    | FOR ID ASSIGN error TO exp . DO exp

    DO      shift, and go to state 230
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 220

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   63    | FOR ID ASSIGN exp TO error . DO exp
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    DO       shift, and go to state 231
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35


State 221

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   35    | FOR ID ASSIGN exp TO exp . DO exp
   64    | FOR ID ASSIGN exp TO exp . DO error

    DO      shift, and go to state 232
    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79


State 222

  116 function-declaration: FUNCTION ID LPAREN error RPAREN . EQ exp
  117                     | FUNCTION ID LPAREN error RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 233
    EQ     shift, and go to state 234


State 223

  115 function-declaration: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 235


State 224

  113 function-declaration: FUNCTION ID LPAREN RPAREN EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 236
    lvalue  go to state 19


State 225

  112 function-declaration: FUNCTION ID LPAREN type-fields RPAREN . EQ exp
  114                     | FUNCTION ID LPAREN type-fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 237
    EQ     shift, and go to state 238


State 226

  110 variable-declaration: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 239
    lvalue  go to state 19


State 227

  103 type: error NEWLINE .

    $default  reduce using rule 103 (type)


State 228

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   79 field-list: error COMMA ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 79 (field-list)


State 229

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   78 field-list: field-list COMMA ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 78 (field-list)


State 230

   62 exp: FOR ID ASSIGN error TO exp DO . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 240
    lvalue  go to state 19


State 231

   63 exp: FOR ID ASSIGN exp TO error DO . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 241
    lvalue  go to state 19


State 232

   35 exp: FOR ID ASSIGN exp TO exp DO . exp
   64    | FOR ID ASSIGN exp TO exp DO . error

    error   shift, and go to state 242
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 243
    lvalue  go to state 19


State 233

  117 function-declaration: FUNCTION ID LPAREN error RPAREN COLON . ID EQ exp

    ID  shift, and go to state 244


State 234

  116 function-declaration: FUNCTION ID LPAREN error RPAREN EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 245
    lvalue  go to state 19


State 235

  115 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 246


State 236

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  113 function-declaration: FUNCTION ID LPAREN RPAREN EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 113 (function-declaration)


State 237

  114 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 247


State 238

  112 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 248
    lvalue  go to state 19


State 239

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  110 variable-declaration: VAR ID COLON ID ASSIGN exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 110 (variable-declaration)


State 240

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   62    | FOR ID ASSIGN error TO exp DO exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 62 (exp)]
    AND       [reduce using rule 62 (exp)]
    LE        [reduce using rule 62 (exp)]
    GE        [reduce using rule 62 (exp)]
    LT        [reduce using rule 62 (exp)]
    GT        [reduce using rule 62 (exp)]
    NEQ       [reduce using rule 62 (exp)]
    EQ        [reduce using rule 62 (exp)]
    MINUS     [reduce using rule 62 (exp)]
    PLUS      [reduce using rule 62 (exp)]
    DIVIDE    [reduce using rule 62 (exp)]
    TIMES     [reduce using rule 62 (exp)]
    POWER     [reduce using rule 62 (exp)]
    $default  reduce using rule 62 (exp)


State 241

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   63    | FOR ID ASSIGN exp TO error DO exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 63 (exp)]
    AND       [reduce using rule 63 (exp)]
    LE        [reduce using rule 63 (exp)]
    GE        [reduce using rule 63 (exp)]
    LT        [reduce using rule 63 (exp)]
    GT        [reduce using rule 63 (exp)]
    NEQ       [reduce using rule 63 (exp)]
    EQ        [reduce using rule 63 (exp)]
    MINUS     [reduce using rule 63 (exp)]
    PLUS      [reduce using rule 63 (exp)]
    DIVIDE    [reduce using rule 63 (exp)]
    TIMES     [reduce using rule 63 (exp)]
    POWER     [reduce using rule 63 (exp)]
    $default  reduce using rule 63 (exp)


State 242

   39 exp: error . ASSIGN exp
   40    | error . PLUS exp
   41    | error . MINUS exp
   42    | error . TIMES exp
   43    | error . DIVIDE exp
   44    | error . EQ exp
   45    | error . NEQ exp
   46    | error . GT exp
   47    | error . LT exp
   48    | error . GE exp
   49    | error . LE exp
   50    | error . OR exp
   51    | error . AND exp
   53    | error . POWER exp
   64    | FOR ID ASSIGN exp TO exp DO error .
   68    | error . NEWLINE
   84 lvalue: error . DOT ID
   86       | error . NEWLINE

    DOT      shift, and go to state 20
    NEWLINE  shift, and go to state 113
    ASSIGN   shift, and go to state 22
    OR       shift, and go to state 23
    AND      shift, and go to state 24
    LE       shift, and go to state 25
    GE       shift, and go to state 26
    LT       shift, and go to state 27
    GT       shift, and go to state 28
    NEQ      shift, and go to state 29
    EQ       shift, and go to state 30
    MINUS    shift, and go to state 31
    PLUS     shift, and go to state 32
    DIVIDE   shift, and go to state 33
    TIMES    shift, and go to state 34
    POWER    shift, and go to state 35

    NEWLINE   [reduce using rule 64 (exp)]
    OR        [reduce using rule 64 (exp)]
    AND       [reduce using rule 64 (exp)]
    LE        [reduce using rule 64 (exp)]
    GE        [reduce using rule 64 (exp)]
    LT        [reduce using rule 64 (exp)]
    GT        [reduce using rule 64 (exp)]
    NEQ       [reduce using rule 64 (exp)]
    EQ        [reduce using rule 64 (exp)]
    MINUS     [reduce using rule 64 (exp)]
    PLUS      [reduce using rule 64 (exp)]
    DIVIDE    [reduce using rule 64 (exp)]
    TIMES     [reduce using rule 64 (exp)]
    POWER     [reduce using rule 64 (exp)]
    $default  reduce using rule 64 (exp)


State 243

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
   35    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    OR        [reduce using rule 35 (exp)]
    AND       [reduce using rule 35 (exp)]
    LE        [reduce using rule 35 (exp)]
    GE        [reduce using rule 35 (exp)]
    LT        [reduce using rule 35 (exp)]
    GT        [reduce using rule 35 (exp)]
    NEQ       [reduce using rule 35 (exp)]
    EQ        [reduce using rule 35 (exp)]
    MINUS     [reduce using rule 35 (exp)]
    PLUS      [reduce using rule 35 (exp)]
    DIVIDE    [reduce using rule 35 (exp)]
    TIMES     [reduce using rule 35 (exp)]
    POWER     [reduce using rule 35 (exp)]
    $default  reduce using rule 35 (exp)


State 244

  117 function-declaration: FUNCTION ID LPAREN error RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 249


State 245

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  116 function-declaration: FUNCTION ID LPAREN error RPAREN EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 116 (function-declaration)


State 246

  115 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 250
    lvalue  go to state 19


State 247

  114 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 251


State 248

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  112 function-declaration: FUNCTION ID LPAREN type-fields RPAREN EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 112 (function-declaration)


State 249

  117 function-declaration: FUNCTION ID LPAREN error RPAREN COLON ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 252
    lvalue  go to state 19


State 250

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  115 function-declaration: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 115 (function-declaration)


State 251

  114 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ . exp

    error   shift, and go to state 84
    ID      shift, and go to state 4
    STRING  shift, and go to state 5
    INT     shift, and go to state 6
    LPAREN  shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13
    MINUS   shift, and go to state 15
    UMINUS  shift, and go to state 16

    exp     go to state 253
    lvalue  go to state 19


State 252

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  117 function-declaration: FUNCTION ID LPAREN error RPAREN COLON ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 117 (function-declaration)


State 253

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . OR exp
   22    | exp . AND exp
   23    | exp . POWER exp
  114 function-declaration: FUNCTION ID LPAREN type-fields RPAREN COLON ID EQ exp .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    LE      shift, and go to state 69
    GE      shift, and go to state 70
    LT      shift, and go to state 71
    GT      shift, and go to state 72
    NEQ     shift, and go to state 73
    EQ      shift, and go to state 74
    MINUS   shift, and go to state 75
    PLUS    shift, and go to state 76
    DIVIDE  shift, and go to state 77
    TIMES   shift, and go to state 78
    POWER   shift, and go to state 79

    $default  reduce using rule 114 (function-declaration)
